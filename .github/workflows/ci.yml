name: CI

on:
  pull_request:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  DB_HOST: 127.0.0.1
  DB_USER: chat
  DB_PASSWORD: chat
  DB_NAME: chat
  REDIS_ADDR: 127.0.0.1:6379
  FRONTEND_ORIGIN: '*'

jobs:
  unit:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go 1.23 (latest patch)
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"
          check-latest: true

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go1.23-${{ hashFiles('**/go.sum') }}

      - name: Run unit tests with coverage
        run: |
          go test ./... -covermode=atomic -coverprofile=coverage.out

      - name: govulncheck
        uses: golang/govulncheck-action@v1
        with:
          go-version-input: "1.23"
          check-latest: true
          go-package: ./...
          output-format: text

      - name: Generate coverage badge
        if: github.ref_name == 'main'
        uses: k1LoW/github-coverage-badge@v1
        with:
          coverage-file: coverage.out
          badge-file: coverage.svg
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate HTML coverage report
        run: |
          go tool cover -html=coverage.out -o coverage.html

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: |
            coverage.out
            coverage.svg
            coverage.html

      - name: Deploy coverage to GitHub Pages
        if: github.ref_name == 'main'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .
          publish_branch: gh-pages
          keep_files: true

  integration:
    if: github.event_name != 'pull_request'
    needs: unit
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: chat
          POSTGRES_USER: chat
          POSTGRES_DB: chat
        ports: ["5432:5432"]
        options: >-
          --health-cmd "pg_isready -U chat"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7-alpine
        ports: ["6379:6379"]
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go 1.23 (latest patch)
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"
          check-latest: true

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go1.23-${{ hashFiles('**/go.sum') }}

      - name: Install redis-cli
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y --no-install-recommends redis-tools

      - name: Wait for DB / Redis
        run: |
          until pg_isready -h localhost -U $DB_USER; do sleep 2; done
          until redis-cli -h localhost ping; do sleep 2; done

      - name: Run unit + integration tests
        run: go test -tags=integration ./...
